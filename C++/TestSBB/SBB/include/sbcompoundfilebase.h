#ifndef __INC_SBCOMPOUNDFILEBASE
#define __INC_SBCOMPOUNDFILEBASE

#if _MSC_VER > 1000
#  pragma once
#endif // _MSC_VER > 1000

#include "sbdefs.h"
#include "sbcore.h"
#include "sbsystem.h"
#include "sbcompoundfileresources.h"
#include "sbtypes.h"
#include "sbutils.h"

#pragma pack(push, 1)

#ifdef __cplusplus
namespace SecureBlackbox {
#endif

#ifdef __cplusplus
extern "C" {
#endif
#define SB_CFB_ERROR_BASE 	734464
#define SB_CFB_ERROR_WRITE_FAILED_READONLY 	734465
#define SB_CFB_ERROR_OUTPUT_BUFFER_TOO_SMALL 	734466
#define SB_CFB_ERROR_INPUT_BUFFER_TOO_SMALL 	734467
#define SB_CFB_ERROR_DIFAT_READ_FAILED 	734468
#define SB_CFB_ERROR_DIFAT_WRITE_FAILED 	734469
#define SB_CFB_ERROR_FAT_SECTOR_READ_FAILED 	734470
#define SB_CFB_ERROR_FAT_SECTOR_WRITE_FAILED 	734471
#define SB_CFB_ERROR_FAT_READ_FAILED 	734472
#define SB_CFB_ERROR_FAT_WRITE_FAILED 	734473
#define SB_CFB_ERROR_MINI_FAT_SECTOR_READ_FAILED 	734474
#define SB_CFB_ERROR_MINI_FAT_SECTOR_WRITE_FAILED 	734475
#define SB_CFB_ERROR_MINI_FAT_READ_FAILED 	734476
#define SB_CFB_ERROR_MINI_FAT_WRITE_FAILED 	734477
#define SB_CFB_ERROR_SECTOR_WRITE_FAILED 	734478
#define SB_CFB_ERROR_FIRST_SECTOR_WRITE_FAILED 	734479
#define SB_CFB_ERROR_DIRECTORY_ENTRY_READ_FAILED 	734480
#define SB_CFB_ERROR_DIRECTORY_ENTRY_WRITE_FAILED 	734481
#define SB_CFB_ERROR_ROOT_ENTRY_READ_FAILED 	734482
#define SB_CFB_ERROR_ROOT_ENTRY_WRITE_FAILED 	734483
#define SB_CFB_ERROR_HEADER_READ_FAILED 	734484
#define SB_CFB_ERROR_HEADER_WRITE_FAILED 	734485
#define SB_CFB_ERROR_MINI_STREAM_READ_FAILED 	734486
#define SB_CFB_ERROR_MINI_STREAM_WRITE_FAILED 	734487
#define SB_CFB_ERROR_STREAM_READ_FAILED 	734488
#define SB_CFB_ERROR_STREAM_WRITE_FAILED 	734489
#define SB_CFB_ERROR_FAT_STREAM_RESIZE_FAILED 	734490
#define SB_CFB_ERROR_NO_STREAM_PARAMETER 	734494
#define SB_CFB_ERROR_FILE_TOO_SMALL 	734495
#define SB_CFB_ERROR_INVALID_FILE_SIGNATURE 	734496
#define SB_CFB_ERROR_UNSUPPORTED_FILE_VERSION 	734497
#define SB_CFB_ERROR_UNSUPPORTED_BYTE_ORDER 	734498
#define SB_CFB_ERROR_INVALID_SECTOR_SIZE 	734499
#define SB_CFB_ERROR_INVALID_MINI_SECTOR_SIZE 	734500
#define SB_CFB_ERROR_INVALID_NUMBER_OF_DIFAT_SECTORS 	734501
#define SB_CFB_ERROR_INVALID_NUMBER_OF_FAT_SECTORS 	734502
#define SB_CFB_ERROR_INVALID_NUMBER_OF_MINI_FAT_SECTORS 	734503
#define SB_CFB_ERROR_INVALID_NUMBER_OF_DIRECTORY_ENTRY_SECTORS 	734504
#define SB_CFB_ERROR_INVALID_OBJECT_TYPE_FOR_ROOT_ENTRY 	734505
#define SB_CFB_ERROR_INVALID_OBJECT_TYPE_FOR_DIRECTORY_ENTRY 	734506
#define SB_CFB_ERROR_SID_EXCEEDS_MAX 	734507
#define SB_CFB_ERROR_SID_ALREADY_IN_USE 	734508
#define SB_CFB_ERROR_SECTOR_EXCEEDS_MAX 	734509
#define SB_CFB_ERROR_CYCLIC_SECTOR 	734510
#define SB_CFB_ERROR_STREAM_NOT_FOUND 	734511
#define SB_CFB_ERROR_INVALID_STREAM_SIZE 	734512
#define SB_CFB_ERROR_STREAM_SIZE_MISMATCH 	734513
#define SB_CFB_ERROR_INVALID_DIRECTORY_ENTRY_NAME 	734514
#define SB_CFB_ERROR_DIRECTORY_ENTRY_NAME_EXISTS 	734515
#define SB_CFB_ERROR_SUB_STORAGE_NOT_FOUND 	734516
#define SB_CFB_ERROR_SUB_STORAGE_NON_EMPTY 	734517
#define SB_CFB_ERROR_ROOT_ENTRY_HAS_SIBLINGS 	734518
#define SB_CFB_ERROR_ROOT_ENTRY_NAME_CHANGE_FAILED 	734519
#define SB_CFB_ERROR_ROOT_ENTRY_CREATION_TIME_CHANGE_FAILED 	734520
#define SB_CFB_ERROR_ROOT_ENTRY_MODIFIED_TIME_CHANGE_FAILED 	734521
#define SB_MAXREGSECT 	4294967290
#define SB_DIFSECT 	4294967292
#define SB_FATSECT 	4294967293
#define SB_ENDOFCHAIN 	4294967294
#define SB_FREESECT 	4294967295
#define SB_MAXREGSID 	4294967290
#define SB_NOSTREAM 	4294967295
#define SB_STGTY_INVALID 	0
#define SB_STGTY_STORAGE 	1
#define SB_STGTY_STREAM 	2
#define SB_STGTY_LOCKBYTES 	3
#define SB_STGTY_PROPERTY 	4
#define SB_STGTY_ROOT 	5
#define SB_DE_RED 	0
#define SB_DE_BLACK 	1
#define SB_CFB_HEADER_SIZE 	512
#define SB_CFB_DIR_ENTRY_SIZE 	128
#define SB_CFB_DIR_ENTRY_MAX_NAME_LENGTH 	32

#pragma pack(1)
typedef struct 
{
	uint8_t Signature[8];
	TGuid CLSID;
	uint16_t MinorVersion;
	uint16_t MajorVersion;
	uint16_t ByteOrder;
	uint16_t SectorShift;
	uint16_t MiniSectorShift;
	uint16_t Reserved1;
	uint32_t Reserved2;
	uint32_t DirectorySectorsCount;
	uint32_t FATSectorsCount;
	uint32_t FirstDirectorySector;
	uint32_t TransactionSignatureNumber;
	uint32_t MiniStreamCutoffSize;
	uint32_t FirstMiniFATSector;
	uint32_t MiniFATSectorsCount;
	uint32_t FirstDIFATSector;
	uint32_t DIFATSectorsCount;
	uint32_t DIFAT[109];
} TSBCompoundFileHeader;

#pragma pack(1)
typedef struct 
{
	sb_char16_t Name[32];
	uint16_t NameLength;
	uint8_t ObjectType;
	uint8_t ColorFlag;
	uint32_t LeftSiblingID;
	uint32_t RightSiblingID;
	uint32_t ChildID;
	TGuid CLSID;
	uint32_t StateBits;
#ifdef SB_WINDOWS
	windows_FILETIME CreationTime;
	windows_FILETIME ModifiedTime;
#else
	_FILETIME CreationTime;
	_FILETIME ModifiedTime;
#endif
	uint32_t StartingSector;
	int64_t StreamSize;
} TSBCompoundFileDirectoryEntry;

#ifdef __cplusplus
};	/* extern "C" */
#endif

#ifdef __cplusplus
};	/* namespace SecureBlackbox */
#endif

#pragma pack(pop)

#endif  /* __INC_SBCOMPOUNDFILEBASE */
